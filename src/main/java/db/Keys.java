/*
 * This file is generated by jOOQ.
 */
package db;


import db.tables.MessageTable;
import db.tables.SessionTable;
import db.tables.records.MessageRecord;
import db.tables.records.SessionRecord;

import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>sharding_jdbc_test</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<MessageRecord, Long> IDENTITY_MESSAGE = Identities0.IDENTITY_MESSAGE;
    public static final Identity<SessionRecord, Long> IDENTITY_SESSION = Identities0.IDENTITY_SESSION;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<MessageRecord> KEY_MESSAGE_PRIMARY = UniqueKeys0.KEY_MESSAGE_PRIMARY;
    public static final UniqueKey<SessionRecord> KEY_SESSION_PRIMARY = UniqueKeys0.KEY_SESSION_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<MessageRecord, Long> IDENTITY_MESSAGE = Internal.createIdentity(MessageTable.MESSAGE, MessageTable.MESSAGE.ID);
        public static Identity<SessionRecord, Long> IDENTITY_SESSION = Internal.createIdentity(SessionTable.SESSION, SessionTable.SESSION.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<MessageRecord> KEY_MESSAGE_PRIMARY = Internal.createUniqueKey(MessageTable.MESSAGE, "KEY_message_PRIMARY", new TableField[] { MessageTable.MESSAGE.ID }, true);
        public static final UniqueKey<SessionRecord> KEY_SESSION_PRIMARY = Internal.createUniqueKey(SessionTable.SESSION, "KEY_session_PRIMARY", new TableField[] { SessionTable.SESSION.ID }, true);
    }
}
